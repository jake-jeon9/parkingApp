<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis.parkinglistMapper">
	<!-- 주차 리스트 -->
	<!-- 차량 입차 -->
	<insert id="parkinglistInsert" parameterType="parkinglistDTO" useGeneratedKeys="true" keyColumn="usedNo,memberNo,timeOfParked,currentOfState" keyProperty="usedNo,memberNo,timeOfParked,currentOfState">
		INSERT INTO listOfparked 
		VALUES     (seq_listOfParked.nextval,
		           #{memberNo},
				   #{plateNumOfCar},
				   default,
				   0,
				   sysdate,
				   null,
				   0,
				   null,
				   null
				   )
	</insert>
	<!-- 사진 링크 저장 -->
	<update id="parkinglistupdateLink" parameterType="java.util.Map" >
		UPDATE listOfparked 
		SET    photo_link = #{photo_link}
		WHERE usedNo = #{usedNo}
	</update>
	<select id ="parkinglistGetPhotoLink" parameterType="int" resultType="String">
		SELECT photo_link
		FROM listOfparked
		WHERE usedNo = #{usedNo}
	</select>
	<!-- 차량 출차 -->
	<update id="parkinglistUpdate" parameterType="parkinglistDTO" >
		UPDATE listOfparked 
		SET    currentOfState = 'out', 
			   timeOfused = #{timeOfused},
			   timeOfOut = to_date(#{timeOfOut},'YYYY-MM-DD HH24:MI:SS'),
			   paid = #{paid},
			   coupon = #{coupon}
		WHERE  usedNo = #{usedNo}
	</update>
	
	<!-- 정보수정 -->
	<update id="parkinglistModify" parameterType="parkinglistDTO" >
		UPDATE listOfparked 
		SET    plateNumOfCar = #{plateNumOfCar}, 
			   currentOfState = #{currentOfState},
			   timeOfused = #{timeOfused},
			   timeOfOut = to_date(#{timeOfOut},'YYYY-MM-DD HH24:MI:SS'),
			   timeOfParked = to_date(#{timeOfParked},'YYYY-MM-DD HH24:MI:SS'),
			   paid = #{paid},
			   coupon = #{coupon}
		WHERE  usedNo = #{usedNo} 
	</update>
	
	<!-- 리스트 삭제 -->
	<delete id="parkinglistDelete" parameterType="int" >
		DELETE FROM listOfparked 
		WHERE  usedNo = #{usedNo}
	</delete>
	
	
	<!-- 특정 차량 조회 -->
	<select id = "getSpacificitem" parameterType="java.util.Map" resultType="parkinglistDTO">
		SELECT * FROM listOfparked
		WHERE memberNo = #{memberNo} AND plateNumOfCar = #{plateNumOfCar}
		<if test= "state != null">
			AND currentOfState = #{state}		
		</if>
		ORDER BY usedNo
	</select>
	
	<!-- 오늘 차량 리스트 조회  option : in or out and coupon regular: memb, agency A%, false-->
	<select id = "getTodayAll" parameterType="java.util.Map" resultType="parkinglistDTO">
		SELECT usedNo,memberNo,plateNumOfCar,currentOfState,timeOfused,timeOfParked,timeOfOut,paid,coupon 
		FROM ( SELECT rownum rn, tt. *
		FROM ( SELECT * FROM listofparked
		<where>
		memberNo = #{memberNo} 
		AND timeOfParked BETWEEN TRUNC(SYSDATE,'DD') AND TRUNC(SYSDATE,'DD')+1 -(1/24/60)
		<if test="!state.equals('all')"> 
	 	 	AND currentOfState = #{state} 
	 	</if>
	 	<if test="coupon != null">
		 	<if test="!coupon.equals('use')"> 
		  		AND coupon = 'memb' OR coupon like 'a%'  
		 	</if>
		 		<if test="coupon.equals('non-use')"> 
		  		AND coupon = 'false'
	 		</if>
 		</if>
		 </where>
		 ORDER BY usedNo DESC nulls last)
	 		 tt)
	 	WHERE rn>= #{startNum} and rn &lt;= #{endNum}
	</select>

	<!-- 페이징 기간 조회  option : 1. in or out 2. coupon false / a% / member -->
	<select id = "parkinglistSelect" parameterType="java.util.Map" resultType="parkinglistDTO">
		SELECT usedNo,memberNo,plateNumOfCar,currentOfState,timeOfused,timeOfParked,timeOfOut,paid,coupon 
		FROM  ( SELECT rownum rn, tt. * 
		FROM  ( SELECT * FROM listofparked
		<where>
		 memberNo = #{memberNo} 
			<if test = "startDate != null">
				AND timeOfParked 
				BETWEEN #{startDate} AND #{endDate}
			</if>
			<if test="coupon != null">
			 	<if test="!coupon.equals('use')"> 
			  		AND coupon = 'memb' OR coupon like 'a%'  
			 	</if>
		 		<if test="coupon.equals('non-use')"> 
			  		AND coupon = 'false'
		 		</if>
 			</if>		
		</where>
			ORDER BY usedNo DESC nulls last)
	 		 tt)
	 	WHERE rn>= #{startNum} and rn &lt;= #{endNum}		 				
	</select>
	
	<!-- 시간 얻어오기 -->
	<select id="getTimeFromServer" resultType="String">
	SELECT to_char(sysdate,'YYYY-MM-DD HH24:MI') FROM DUAL
	</select>
</mapper>